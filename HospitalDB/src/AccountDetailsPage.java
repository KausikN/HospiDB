
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kausik N
 */
public class AccountDetailsPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    public AccountDetailsPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        l_t = new javax.swing.JLabel();
        Go = new javax.swing.JButton();
        nav = new javax.swing.JPanel();
        view_button = new javax.swing.JButton();
        account_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        add_delete_button = new javax.swing.JButton();
        back = new javax.swing.JButton();
        backhome = new javax.swing.JButton();
        Id_display = new javax.swing.JLabel();
        l_t1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        column_list = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        enter_values = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 72, 124));
        jPanel1.setLayout(null);

        l_t.setFont(new java.awt.Font("Century Gothic", 1, 88)); // NOI18N
        l_t.setForeground(new java.awt.Color(255, 255, 255));
        l_t.setText("Account Details");
        jPanel1.add(l_t);
        l_t.setBounds(430, 10, 700, 109);

        Go.setBackground(new java.awt.Color(0, 255, 255));
        Go.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        Go.setForeground(new java.awt.Color(0, 0, 255));
        Go.setText("Update Account");
        Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoActionPerformed(evt);
            }
        });
        jPanel1.add(Go);
        Go.setBounds(590, 705, 240, 60);

        view_button.setBackground(new java.awt.Color(5, 32, 74));
        view_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        view_button.setForeground(new java.awt.Color(237, 234, 234));
        view_button.setText("VIEW");
        view_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_buttonActionPerformed(evt);
            }
        });

        account_button.setBackground(new java.awt.Color(5, 32, 74));
        account_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        account_button.setForeground(new java.awt.Color(237, 234, 234));
        account_button.setText("ACCOUNT");
        account_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                account_buttonActionPerformed(evt);
            }
        });

        update_button.setBackground(new java.awt.Color(5, 32, 74));
        update_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        update_button.setForeground(new java.awt.Color(237, 234, 234));
        update_button.setText("UPDATE");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        add_delete_button.setBackground(new java.awt.Color(5, 32, 74));
        add_delete_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        add_delete_button.setForeground(new java.awt.Color(237, 234, 234));
        add_delete_button.setText("INSERT/DELETE");
        add_delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_delete_buttonActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(5, 32, 74));
        back.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        back.setForeground(new java.awt.Color(237, 234, 234));
        back.setText("SIGN OUT");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        backhome.setBackground(new java.awt.Color(5, 32, 74));
        backhome.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        backhome.setForeground(new java.awt.Color(237, 234, 234));
        backhome.setText("BACK");
        backhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backhomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navLayout = new javax.swing.GroupLayout(nav);
        nav.setLayout(navLayout);
        navLayout.setHorizontalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(add_delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(update_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(account_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(backhome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navLayout.setVerticalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addComponent(account_button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(view_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(add_delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addComponent(backhome, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(nav);
        nav.setBounds(0, 0, 220, 800);

        Id_display.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        Id_display.setForeground(new java.awt.Color(237, 234, 234));
        Id_display.setText("Your Id : ");
        jPanel1.add(Id_display);
        Id_display.setBounds(280, 170, 320, 32);

        l_t1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        l_t1.setForeground(new java.awt.Color(237, 234, 234));
        l_t1.setText("Your Details");
        jPanel1.add(l_t1);
        l_t1.setBounds(280, 130, 320, 32);

        column_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        column_list.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                column_listMouseWheelMoved(evt);
            }
        });
        jScrollPane4.setViewportView(column_list);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(280, 220, 370, 450);

        enter_values.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        jScrollPane3.setViewportView(enter_values);
        enter_values.getAccessibleContext().setAccessibleName("");
        enter_values.getAccessibleContext().setAccessibleDescription("");

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(720, 220, 440, 450);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1250, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String Table = "";
String[] columns_in_table = new String[200];
String[] update_values = new String[200];
int columns_in_table_size = 0;
String Username;
String Password;
String Id;
String Category;

int viewable_tables_size = 0;
int deletable_tables_size = 0;

int Constrain;

int updatable_tables_size = 0;

void MySQLConnector_GetUser(){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1="select * from LoginDetails where LoggedIn = 1;";
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);
    int rs_size = 0;
    while(rs.next()){
        Username = rs.getString("Username");
        Password = rs.getString("Password");
        Id = rs.getString("Id");
        Category = rs.getString("Category");
        for(int i=0;i<columns_in_table_size;i++){
            update_values[i] = rs.getString(columns_in_table[i]);
        }
        
        rs_size++;
    }
    
    if(rs_size != 1){
        System.out.println("ERROR: Multiple or No LoggedIn users.");
    }
    
    rs.close();
    con.close();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void FindAccesibleTables(String category){
    if(category.equals("Admin")){
        viewable_tables_size = 8;

        updatable_tables_size = 8;

        deletable_tables_size = 8;
    }
    else if(category.equals("Doctor")){
        viewable_tables_size = 8;

        updatable_tables_size = 1;
        
        deletable_tables_size = 0;
    }
    else if(category.equals("Staff")){
        viewable_tables_size = 8;

        updatable_tables_size = 3;

        deletable_tables_size = 3;
    }
    else if(category.equals("Patient")){
        viewable_tables_size = 2;

        updatable_tables_size = 0;

        deletable_tables_size = 0;
    }
}

void MySQLConnector_GetColumns(){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1="show columns from "+Table+";";
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);
    int rs_size = 0;
    while(rs.next()){
        String rs_temp = rs.getString("Field");
        if(!(rs_temp.equals("LoggedIn"))){
            columns_in_table[rs_size] = rs_temp;
            rs_size++;
        }
    }
    columns_in_table_size = rs_size;
    rs.close();
    con.close();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void InitList(){
    DefaultTableModel dtm = (DefaultTableModel)column_list.getModel();
    dtm.setRowCount(0);
    DefaultTableModel dtmenter = (DefaultTableModel)enter_values.getModel();
    dtmenter.setRowCount(0);
    for(int i=1;i<columns_in_table_size;i++){
        Object[] obj = new Object[1];
        obj[0] = columns_in_table[i];
        dtm.addRow(obj);
    }
}

void UpdateList(){
    try {System.out.println("UpdateList");

    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1 = "select * from "+Table+";";
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);
    int rs_size = 0;
    DefaultTableModel dtmenter = (DefaultTableModel)enter_values.getModel();
    while(rs.next()){
        Object[] row = new Object[1];
        for(int i=1;i<columns_in_table_size;i++){
            row[0] = rs.getObject(columns_in_table[i]);
            if(row == null){
                System.out.println("null present.");
                row[0] = "";
            }
            if(Id.equals(rs.getString(columns_in_table[0]))){  //REMEMBER SQL INDEX STARTS FROM 1
                dtmenter.addRow(row);
            }
        }

        rs_size++;
    }
    rs.close();
    con.close();
    RowSizeFitter();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void MySQLConnector_Update(){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s="";
    Statement st1 = con.createStatement();
    for(int i=1;i<columns_in_table_size;i++){
        s = "update "+Table+" set "+columns_in_table[i]+" = '"+update_values[i]+"' where LoggedIn = 1;";System.out.println(s);
        st1.executeUpdate(s);   
    }
    con.close();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void RowSizeFitter(){
    if(column_list.getRowCount()>0){
        int row_height = (420/column_list.getRowCount());
        column_list.setRowHeight(row_height);

        enter_values.setRowHeight(row_height);
    }
}

    private void GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoActionPerformed
DefaultTableModel dtmenter = (DefaultTableModel)enter_values.getModel();
for(int i=1;i<columns_in_table_size;i++){
    update_values[i] = dtmenter.getValueAt(i-1, 0).toString();
}

MySQLConnector_Update();
JOptionPane.showMessageDialog(this, "Successfully Updated.");
InitList();
UpdateList();
    }//GEN-LAST:event_GoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
Table = "LoginDetails";

account_button.setFocusable(false);

MySQLConnector_GetColumns();

MySQLConnector_GetUser();
Id_display.setText(Id_display.getText()+" "+Id);

FindAccesibleTables(Category);
if(viewable_tables_size == 0){
    view_button.setVisible(false);
}
if(updatable_tables_size == 0){
    update_button.setVisible(false);
}
if(deletable_tables_size == 0){
    add_delete_button.setVisible(false);
}

InitList();
UpdateList();

JScrollPane spLeft = jScrollPane4;
JScrollPane spRight = jScrollPane3;
spLeft.getVerticalScrollBar().setModel(spRight.getVerticalScrollBar().getModel());
spLeft.setWheelScrollingEnabled(false);
spLeft.addMouseWheelListener(new MouseWheelListener() {
    public void mouseWheelMoved(MouseWheelEvent e) {
        spRight.dispatchEvent(e);
    }
});
    }//GEN-LAST:event_formWindowOpened

    private void view_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_buttonActionPerformed
Table_View h = new Table_View();
AccountDetailsPage.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_view_buttonActionPerformed

    private void account_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_account_buttonActionPerformed

    }//GEN-LAST:event_account_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
Table_UpdatePageHome h = new Table_UpdatePageHome();
AccountDetailsPage.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_update_buttonActionPerformed

    private void add_delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_delete_buttonActionPerformed
Table_InsertDeleteHome h = new Table_InsertDeleteHome();
AccountDetailsPage.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_add_delete_buttonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
LoginPage h = new LoginPage();
AccountDetailsPage.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void column_listMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_column_listMouseWheelMoved

    }//GEN-LAST:event_column_listMouseWheelMoved

    private void backhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backhomeActionPerformed
HomePage h = new HomePage();
AccountDetailsPage.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_backhomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Go;
    private javax.swing.JLabel Id_display;
    private javax.swing.JButton account_button;
    private javax.swing.JButton add_delete_button;
    private javax.swing.JButton back;
    private javax.swing.JButton backhome;
    private javax.swing.JTable column_list;
    private javax.swing.JTable enter_values;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel l_t;
    private javax.swing.JLabel l_t1;
    private javax.swing.JPanel nav;
    private javax.swing.JButton update_button;
    private javax.swing.JButton view_button;
    // End of variables declaration//GEN-END:variables
}
