
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kausik N
 */
public class Table_UpdatePageHome extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    public Table_UpdatePageHome() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        l_t = new javax.swing.JLabel();
        Go = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JTable();
        nav = new javax.swing.JPanel();
        view_button = new javax.swing.JButton();
        account_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        add_delete_button = new javax.swing.JButton();
        back = new javax.swing.JButton();
        backhome = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        checkbox = new javax.swing.JCheckBox();
        column_dropdown = new javax.swing.JComboBox<>();
        value_text = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        table_dropdown = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 72, 124));
        jPanel1.setLayout(null);

        l_t.setFont(new java.awt.Font("Century Gothic", 1, 88)); // NOI18N
        l_t.setForeground(new java.awt.Color(255, 255, 255));
        l_t.setText("Update");
        jPanel1.add(l_t);
        l_t.setBounds(570, -10, 340, 130);

        Go.setBackground(new java.awt.Color(0, 255, 255));
        Go.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        Go.setForeground(new java.awt.Color(0, 0, 255));
        Go.setText("Update Selection");
        Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoActionPerformed(evt);
            }
        });
        jPanel1.add(Go);
        Go.setBounds(559, 695, 280, 60);

        t1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        t1.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        t1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(t1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 250, 970, 430);

        view_button.setBackground(new java.awt.Color(5, 32, 74));
        view_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        view_button.setForeground(new java.awt.Color(237, 234, 234));
        view_button.setText("VIEW");
        view_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_buttonActionPerformed(evt);
            }
        });

        account_button.setBackground(new java.awt.Color(5, 32, 74));
        account_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        account_button.setForeground(new java.awt.Color(237, 234, 234));
        account_button.setText("ACCOUNT");
        account_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                account_buttonActionPerformed(evt);
            }
        });

        update_button.setBackground(new java.awt.Color(5, 32, 74));
        update_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        update_button.setForeground(new java.awt.Color(237, 234, 234));
        update_button.setText("UPDATE");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        add_delete_button.setBackground(new java.awt.Color(5, 32, 74));
        add_delete_button.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        add_delete_button.setForeground(new java.awt.Color(237, 234, 234));
        add_delete_button.setText("INSERT/DELETE");
        add_delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_delete_buttonActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(5, 32, 74));
        back.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        back.setForeground(new java.awt.Color(237, 234, 234));
        back.setText("SIGN OUT");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        backhome.setBackground(new java.awt.Color(5, 32, 74));
        backhome.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        backhome.setForeground(new java.awt.Color(237, 234, 234));
        backhome.setText("BACK");
        backhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backhomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navLayout = new javax.swing.GroupLayout(nav);
        nav.setLayout(navLayout);
        navLayout.setHorizontalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(add_delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(update_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(account_button, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
            .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(backhome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navLayout.setVerticalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addComponent(account_button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(view_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(add_delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                .addComponent(backhome, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        jPanel1.add(nav);
        nav.setBounds(0, 0, 220, 800);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conditions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 20))); // NOI18N

        checkbox.setForeground(new java.awt.Color(255, 0, 0));
        checkbox.setText("Constraints?");
        checkbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxItemStateChanged(evt);
            }
        });

        column_dropdown.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                column_dropdownItemStateChanged(evt);
            }
        });

        value_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                value_textKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(value_text, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(column_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(value_text, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(column_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 61, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(960, 60, 240, 170);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 20))); // NOI18N

        table_dropdown.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        table_dropdown.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                table_dropdownItemStateChanged(evt);
            }
        });
        table_dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                table_dropdownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(table_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(table_dropdown, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(240, 140, 300, 90);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1250, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String Table;
String[] columns_in_table = new String[20];
int columns_in_table_size = 0;
String Username;
String Password;
String Id;
String Category;
String Column;

String[] Selected_Ids;

int Constrain;

String[] updatable_tables = new String[10];
int updatable_tables_size = 0;
int viewable_tables_size = 0;
int deletable_tables_size = 0;

void MySQLConnector_GetUser(){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1="select Username, Password, Id, Category from LoginDetails where LoggedIn = 1;";
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);
    int rs_size = 0;
    while(rs.next()){
        Username = rs.getString("Username");
        Password = rs.getString("Password");
        Id = rs.getString("Id");
        Category = rs.getString("Category");
        
        rs_size++;
    }
    
    if(rs_size != 1){
        System.out.println("ERROR: Multiple or No LoggedIn users.");
    }
    
    rs.close();
    con.close();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void FindAccesibleTables(String category){
    if(category.equals("Admin")){
        viewable_tables_size = 8;
        
        updatable_tables[0] = "Doctors";
        updatable_tables[1] = "Patients";
        updatable_tables[2] = "Rooms";
        updatable_tables[3] = "Staff";
        updatable_tables[4] = "Lab";
        updatable_tables[5] = "Equipment";
        updatable_tables[6] = "MedicalStock";
        updatable_tables[7] = "PatientReport";
        updatable_tables_size = 8;

        deletable_tables_size = 8;
    }
    else if(category.equals("Doctor")){
        viewable_tables_size = 8;
        
        updatable_tables[0] = "PatientReport";
        updatable_tables_size = 1;
        
        deletable_tables_size = 0;
    }
    else if(category.equals("Staff")){
        viewable_tables_size = 8;

        updatable_tables[0] = "Equipment";
        updatable_tables[1] = "MedicalStock";
        updatable_tables[2] = "Patients";
        updatable_tables_size = 3;

        deletable_tables_size = 3;
    }
    else if(category.equals("Patient")){
        viewable_tables_size = 2;

        updatable_tables_size = 0;

        deletable_tables_size = 0;
    }
}

void MySQLConnector_GetColumns(){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1="show columns from "+Table+";";
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);
    int rs_size = 0;
    while(rs.next()){
        columns_in_table[rs_size] = rs.getString("Field");
        
        rs_size++;
    }
    columns_in_table_size = rs_size;
    rs.close();
    con.close();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void InitTable(){
    DefaultTableModel dtm = (DefaultTableModel)t1.getModel();
    dtm.setColumnCount(0);
    dtm.setRowCount(0);
    for(int i=0;i<columns_in_table_size;i++){
        dtm.addColumn(columns_in_table[i]);
    }
}

void UpdateTable(int condition, String value){
    try {
    Class.forName("java.sql.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/Hospital","root","mysql");
    String s1 = "select * from "+Table+";";
    if(condition == 1){
        s1 = "select * from "+Table+" where "+Column+" = "+value+";";
    }
    Statement st1 = con.createStatement();
    ResultSet rs = st1.executeQuery(s1);System.out.println(s1);
    int rs_size = 0;
    while(rs.next()){
        Object[] row = new Object[columns_in_table_size];
        for(int i=0;i<columns_in_table_size;i++){
            row[i] = rs.getObject(columns_in_table[i]);
            if(row[i] == null){
                System.out.println("null present.");
                row[i] = "";
            }
        }
        DefaultTableModel dtm = (DefaultTableModel)t1.getModel();
        dtm.addRow(row);
        
        rs_size++;
    }
    rs.close();
    con.close();
    RowSizeFitter();
    }
    catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());
    }
}

void TransferSelectedRows(){
    Table_UpdatePageEnter h = new Table_UpdatePageEnter();
    
    h.Table = Table;
    
    h.Selected_Ids_size = t1.getSelectedRowCount();
    for(int i=0;i<t1.getSelectedRowCount();i++){
        h.Selected_Ids[i] = Selected_Ids[i];
    }
}

void RowSizeFitter(){
    System.out.println(t1.getSize().height);
    if(t1.getRowCount()>0){
        int row_height = (280/t1.getRowCount());
        t1.setRowHeight(row_height);
    }
}

int SQLInjectionCheck(String s){
    int check = 1;
    for(int i=0;i<s.length();i++){
        String s_temp = s.charAt(i)+"";
        if(s_temp.equals("'"))check =0;
    }
    return check;
}


    private void GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoActionPerformed
int[] Selected_Ids_index = new int[t1.getSelectedRowCount()];
Selected_Ids_index = t1.getSelectedRows();
Selected_Ids = new String[t1.getSelectedRowCount()];
DefaultTableModel dtm = (DefaultTableModel) t1.getModel();
for(int i=0;i<t1.getSelectedRowCount();i++){
    Selected_Ids[i] = t1.getValueAt(Selected_Ids_index[i], 0).toString();
}

Table_UpdatePageEnter h = new Table_UpdatePageEnter();

TransferSelectedRows();

Table_UpdatePageHome.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_GoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
update_button.setFocusable(false);
        
MySQLConnector_GetUser();
FindAccesibleTables(Category);
if(viewable_tables_size == 0){
    view_button.setVisible(false);
}
if(updatable_tables_size == 0){
    update_button.setVisible(false);
}
if(deletable_tables_size == 0){
    add_delete_button.setVisible(false);
}

for(int i=0;i<updatable_tables_size;i++){
    table_dropdown.addItem(updatable_tables[i]);
}

int table_index = table_dropdown.getSelectedIndex();
Table = table_dropdown.getItemAt(table_index);
        
column_dropdown.removeAllItems();
MySQLConnector_GetColumns();
for(int i=0;i<columns_in_table_size;i++){
    column_dropdown.addItem(columns_in_table[i]);
}

int column_index = 0;
Column = column_dropdown.getItemAt(column_index);

column_dropdown.setEnabled(false);
value_text.setEnabled(false);

InitTable();
UpdateTable(0, "");
    }//GEN-LAST:event_formWindowOpened

    private void column_dropdownItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_column_dropdownItemStateChanged
int column_index = column_dropdown.getSelectedIndex();
Column = column_dropdown.getItemAt(column_index);
    }//GEN-LAST:event_column_dropdownItemStateChanged

    private void checkboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxItemStateChanged
if(checkbox.isSelected() == true){
    column_dropdown.setEnabled(true);
    value_text.setEnabled(true);
    Constrain = 1;
}
else if(checkbox.isSelected() == false){
    column_dropdown.setEnabled(false);
    value_text.setEnabled(false);
    Constrain = 0;
}


DefaultTableModel dtm = (DefaultTableModel)t1.getModel();
dtm.setColumnCount(0);
dtm.setRowCount(0);
InitTable();
if(checkbox.isSelected() == true){
    Constrain = 1;
    String val = value_text.getText();System.out.println(val.length());
    if(SQLInjectionCheck(val) == 1){
        val = "'"+val+"'";
        if(val.equals("''") || val.equals(""))Constrain=0;
        UpdateTable(Constrain, val);
    }
    else {
        JOptionPane.showMessageDialog(this, "Please enter valid input.");
        value_text.setText("");
        UpdateTable(Constrain, "");
    }
}
else if(checkbox.isSelected() == false){
    Constrain = 0;
    UpdateTable(Constrain, "");
}
    }//GEN-LAST:event_checkboxItemStateChanged

    private void view_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_buttonActionPerformed
Table_View h = new Table_View();
Table_UpdatePageHome.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_view_buttonActionPerformed

    private void account_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_account_buttonActionPerformed
AccountDetailsPage h = new AccountDetailsPage();
Table_UpdatePageHome.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_account_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed

    }//GEN-LAST:event_update_buttonActionPerformed

    private void add_delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_delete_buttonActionPerformed
Table_InsertDeleteHome h = new Table_InsertDeleteHome();
Table_UpdatePageHome.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_add_delete_buttonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
LoginPage h = new LoginPage();
Table_UpdatePageHome.this.setVisible(false);
h.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void value_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_value_textKeyReleased
DefaultTableModel dtm = (DefaultTableModel)t1.getModel();
dtm.setColumnCount(0);
dtm.setRowCount(0);
InitTable();
if(checkbox.isSelected() == true){
    Constrain = 1;
    String val = value_text.getText();
    if(SQLInjectionCheck(val) == 1){
        val = "'"+val+"'";
        if(val.equals("''") || val.equals(""))Constrain=0;
        UpdateTable(Constrain, val);
    }
    else {
        JOptionPane.showMessageDialog(this, "Please enter valid input.");
        value_text.setText("");
        UpdateTable(Constrain, "");
    }
}
else if(checkbox.isSelected() == false){
    Constrain = 0;
    UpdateTable(Constrain, "");
}
    }//GEN-LAST:event_value_textKeyReleased

    private void backhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backhomeActionPerformed
        HomePage h = new HomePage();
        Table_UpdatePageHome.this.setVisible(false);
        h.setVisible(true);
    }//GEN-LAST:event_backhomeActionPerformed

    private void table_dropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_table_dropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_table_dropdownActionPerformed

    private void table_dropdownItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_table_dropdownItemStateChanged
        int table_index = table_dropdown.getSelectedIndex();
        Table = table_dropdown.getItemAt(table_index);

        column_dropdown.removeAllItems();
        MySQLConnector_GetColumns();
        for(int i=0;i<columns_in_table_size;i++){
            column_dropdown.addItem(columns_in_table[i]);
        }

        InitTable();
        UpdateTable(0,"");
    }//GEN-LAST:event_table_dropdownItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Go;
    private javax.swing.JButton account_button;
    private javax.swing.JButton add_delete_button;
    private javax.swing.JButton back;
    private javax.swing.JButton backhome;
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JComboBox<String> column_dropdown;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_t;
    private javax.swing.JPanel nav;
    private javax.swing.JTable t1;
    private javax.swing.JComboBox<String> table_dropdown;
    private javax.swing.JButton update_button;
    private javax.swing.JTextField value_text;
    private javax.swing.JButton view_button;
    // End of variables declaration//GEN-END:variables
}
